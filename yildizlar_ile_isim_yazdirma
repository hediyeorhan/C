#include <stdio.h>
#include <stdlib.h>
#define boyut 5


void  H_harfi_fonksiyonu(int i,int j)
{


    for(i=0; i<boyut; i++)
    {
        for(j=0; j<boyut; j++)
        {
            if((j==0 || j==boyut-1) && (i==(boyut/2) ||i<boyut)||(i==boyut/2))
            {
                printf("*");
            }
            else
            {
                printf(" ");
            }

        }
        printf("\n");
    }
    printf("\n\n\n");
    return 0;
}
void E_harfi_fonksiyonu(int i,int j)
{
    for(i=0; i<boyut; i++)
    {
        for(j=0; j<boyut; j++)
        {
            if(j==0 || (i==0 || i==boyut-1) && (j>1 && j<boyut-1) || (i == (boyut/2) && j > 1 && j < boyut-1))
            {
                printf("*");
            }
            else
            {
                printf(" ");
            }
        }
        printf("\n");
    }
    printf("\n\n\n");
    return 0;
}
void D_harfi_fonksiyonu(int i,int j)
{
    for(i=0; i<boyut; i++)
    {
        for(j=0; j<boyut; j++)
        {
            if((j==0 || i==0 || i==boyut-1) && (j>0 && j<boyut-1) || (j==boyut-1 && i!=0 && i!=boyut-1) || j==0  )
            {
                printf("*");
            }
            else
            {
                printf(" ");
            }
        }
        printf("\n");
    }
    printf("\n\n\n");
    return 0;
}
void I_harfi_fonksiyonu(int i,int j)
{
    for(i=0; i<=boyut; i++)
    {
        printf("   *\n");

    }
    printf("\n\n\n");
    return 0;
}
void Y_harfi_fonksiyonu(int i,int j)
{
    for(i=0; i<boyut ; i++)
    {

        for(j=0; j<boyut; j++)
        {
            if(j==(boyut-1)-i || i==j && i<(boyut/2))

            {
                printf("*");
            }
            else
            {
                printf(" ");
            }
        }
        printf("\n");
    }
    printf("\n\n\n");
    return 0;
}
void O_harfi_fonksiyonu(int i,int j)
{
    int Row,Col;
    for (Row = 0; Row < boyut; Row++)
    {
        for (Col = 0; Col < boyut; Col++)
        {
            if (((Col == 1 || Col == boyut-1) && Row != 0 && Row != boyut-1) || ((Row == 0 || Row == boyut-1) && Col > 1 && Col < boyut-1))
            {
                printf("*");
            }
            else
            {
                printf(" ");
            }
        }
        printf("\n");
    }
    printf("\n\n\n");
    return 0;
}
void R_harfi_fonksiyonu(int i,int j)
{
    for(i=0; i<boyut; i++)
    {
        for(j=0; j<boyut; j++)
        {
            if (j == 1 || ((i == 0 || i == boyut/2) && j > 1 && j < boyut-1) || (j == boyut-1 && i != 0 && i < boyut/2) || (j == i-1 && i >1))
            {
                printf("*");
            }
            else
            {
                printf(" ");
            }
        }
        printf("\n");
    }
    printf("\n\n\n");
    return 0;
}
void A_harfi_fonksiyonu(int i,int j)
{
    for(i=0; i<boyut; i++)
    {
        for(j=0; j<boyut; j++)
        {
            if(((j==0 || j==boyut-1) && i !=0) || ((i==0 || i==boyut/2) && (j>1 && j<boyut-1)))
            {
                printf("*");
            }
            else
            {
                printf(" ");
            }
        }
        printf("\n");


    }
    printf("\n\n\n");
    return 0;
}
void N_harfi_fonksiyonu(int i,int j)
{
    for(i=0; i<boyut; i++)
    {
        for(j=0; j<boyut; j++)
        {
            if((j==0 || j==boyut-1) || (i == j && j != 0 && j != boyut-1))
            {
                printf("*");
            }
            else
            {
                printf(" ");
            }
        }
        printf("\n");
    }
    printf("\n\n\n");
    return 0;
}
int main()
{
    printf("\t\t\t\t----------------------------------------------\n\n");
    printf("\t\t\t\t-----------------HEDIYE ORHAN-----------------\n\n");
    printf("\t\t\t\t----------------------------------------------\n\n\n\n");
    H_harfi_fonksiyonu(boyut,boyut);
    E_harfi_fonksiyonu(boyut,boyut);
    D_harfi_fonksiyonu(boyut,boyut);
    I_harfi_fonksiyonu(boyut,boyut);
    Y_harfi_fonksiyonu(boyut,boyut);
    E_harfi_fonksiyonu(boyut,boyut);
    O_harfi_fonksiyonu(boyut,boyut);
    R_harfi_fonksiyonu(boyut,boyut);
    H_harfi_fonksiyonu(boyut,boyut);
    A_harfi_fonksiyonu(boyut,boyut);
    N_harfi_fonksiyonu(boyut,boyut);



    return 0;
}
